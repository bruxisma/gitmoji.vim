*gitmoji.txt*           Use gitmoji inside of git commit messages!

Homepage:       https://github.com/slurps-mad-rips/gitmoji.vim
License:        MIT
Version:        0.1.0
Author:         Isabella Muerte

===============================================================================
CONTENTS                                               *gitmoji* *gitmoji-contents*

	1. Introduction .............................. |gitmoji-introduction|
	2. Installation .............................. |gitmoji-installation|
	3. Configuration ............................. |gitmoji-configuration|

===============================================================================
INTRODUCTION                                                      *gitmoji-intro*

gitmoji.vim is a simple plugin to allow using gitmoji from within vim git
commit messages. It provides an autocomplete function, optional iabbrev
replacements, and additional aliasing for gitmoji names.

Information regarding gitmoji can be found at https://gitmoji.dev

gitmoji.vim requires the |matchfuzzy()| function to be available.

===============================================================================
INSTALLATION                                               *gitmoji-installation*

Using your vim package manager of choice, simply add gitmoji.vim to your list
of plugins. For example, if using vim-plug: >
	Plug 'slurps-mad-rips/gitmoji.vim'
<
===============================================================================
CONFIGURATION                                             *gitmoji-configuration*

                                                         *g:gitmoji_insert_emoji*
g:gitmoji_insert_emoji~
	When set to or |v:true|, the actual emoji will be inserted on
	completion instead of the gitmoji text code. e.g., if selecting
	"test-tube", and |g:gitmoji_insert_emoji| is |v:true|, ðŸ§ª will be
	inserted, instead of the gitmoji code ":test_tube:".
	The default is |v:true|.

                                                    *g:gitmoji_complete_anywhere*
g:gitmoji_complete_anywhere~
	When set to |v:true|, both the 'omnifunc' and 'completefunc' can
	activate anywhere.
	The default is |v:false|

                                                        *g:gitmoji_abbreviations*
g:gitmoji_abbreviations~
	If set to |v:true| and |g:gitmoji_insert_emoji| is also set to
	|v:true|, |:iabbrev| commands are injected that will also replace
	gitmoji codes with their respective emoji. This works separately from
	the 'omnifunc' or 'completefunc' that gitmoji sets.
	The default is |v:true|

                                                              *g:gitmoji_aliases*
g:gitmoji_aliases~
	The gitmoji names mentioned on https://gitmoji.dev are not always easy
	to remember for what they do exactly. For this reason, users can supply
	a |g:gitmoji_aliases| variable. This variable can be either a
	|String|, a |Dict|, or a |Funcref|.
	If |g:gitmoji_aliases| is a |String|, it is read as a JSON file,
	converted to a |Dict| and treated AS IF |g:gitmoji_aliases| is a
	|Dict|.
	If |g:gitmoji_aliases| is a |Funcref|, it MUST return a |Dict|, and
	this returned value will be treated AS IF |g:gitmoji_aliases| was a
	|Dict| the entire time.
	If |g:gitmoji_aliases| is a |Dict|, each key MUST be the NAME (not the
	emoji or code) of a gitmoji name. If it is not, it will be ignored and
	a warning will be |:echo|ed to the |:messages| log. Each value of the
	|Dict| MUST be a |List| of |Strings|.
	Each alias is used to create an |:iabbrev| if both
	|g:gitmoji_abbreviations| and |g:gitmoji_insert_emoji| are |v:true|.

===============================================================================
 vim:ft=help:tw=78
